{"version":3,"sources":["webpack://PixelSort/webpack/bootstrap","webpack://PixelSort/webpack/runtime/define property getters","webpack://PixelSort/webpack/runtime/hasOwnProperty shorthand","webpack://PixelSort/webpack/runtime/make namespace object","webpack://PixelSort/./node_modules/@assemblyscript/loader/index.js","webpack://PixelSort/./src/ps/ps.ts"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","BIGINT","BigUint64Array","THIS","decoder","TextDecoder","getStringImpl","buffer","ptr","len","Uint32Array","arr","Uint16Array","String","fromCharCode","apply","decode","preInstantiate","imports","extendedExports","getString","memory","env","abort","msg","file","line","colm","Error","trace","n","args","console","log","slice","join","seed","Date","now","Math","F_NOEXPORTRUNTIME","postInstantiate","instance","table","__new","__pin","__unpin","__collect","__rtti_base","getArrayInfo","id","info","U32","getInfo","getBase","getValueAlign","clz32","getView","alignLog2","signed","float","Float32Array","Float64Array","Int8Array","Uint8Array","Int16Array","Int32Array","BigInt64Array","__getArrayView","align","buf","length","subarray","getTypedArray","Type","getTypedArrayView","bufPtr","attachTypedArrayFunctions","ctor","name","bind","__newString","str","U16","i","p","charCodeAt","__getString","__newArray","values","result","view","set","__getArray","input","out","Array","__getArrayBuffer","Uint8ClampedArray","forEach","BYTES_PER_ELEMENT","__instanceof","baseId","setArgumentsLength","internalName","elem","parts","split","curr","part","shift","hash","indexOf","className","substring","classElem","wrap","constructor","this","thisValue","create","writable","getOwnPropertyNames","getOwnPropertyDescriptor","test","getter","replace","setter","original","demangle","isResponse","src","Response","async","instantiate","source","WebAssembly","instantiateStreaming","arrayBuffer","extended","module","Module","compile","init","wasmUrl","thisArg","_arguments","generator","respond","fetch","bytes","wasm","Sorter","P","Promise","resolve","reject","fulfilled","step","next","e","rejected","done","then","imageData","h","options","data","view0","DataView","setUint8","sort","view1","getUint8"],"mappings":"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","file":"pixelsort.js","sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// Runtime header offsets\nconst ID_OFFSET = -8;\nconst SIZE_OFFSET = -4;\n\n// Runtime ids\nconst ARRAYBUFFER_ID = 0;\nconst STRING_ID = 1;\n// const ARRAYBUFFERVIEW_ID = 2;\n\n// Runtime type information\nconst ARRAYBUFFERVIEW = 1 << 0;\nconst ARRAY = 1 << 1;\nconst STATICARRAY = 1 << 2;\n// const SET = 1 << 3;\n// const MAP = 1 << 4;\nconst VAL_ALIGN_OFFSET = 6;\n// const VAL_ALIGN = 1 << VAL_ALIGN_OFFSET;\nconst VAL_SIGNED = 1 << 11;\nconst VAL_FLOAT = 1 << 12;\n// const VAL_NULLABLE = 1 << 13;\nconst VAL_MANAGED = 1 << 14;\n// const KEY_ALIGN_OFFSET = 15;\n// const KEY_ALIGN = 1 << KEY_ALIGN_OFFSET;\n// const KEY_SIGNED = 1 << 20;\n// const KEY_FLOAT = 1 << 21;\n// const KEY_NULLABLE = 1 << 22;\n// const KEY_MANAGED = 1 << 23;\n\n// Array(BufferView) layout\nconst ARRAYBUFFERVIEW_BUFFER_OFFSET = 0;\nconst ARRAYBUFFERVIEW_DATASTART_OFFSET = 4;\nconst ARRAYBUFFERVIEW_DATALENGTH_OFFSET = 8;\nconst ARRAYBUFFERVIEW_SIZE = 12;\nconst ARRAY_LENGTH_OFFSET = 12;\nconst ARRAY_SIZE = 16;\n\nconst BIGINT = typeof BigUint64Array !== \"undefined\";\nconst THIS = Symbol();\n\nconst STRING_DECODE_THRESHOLD = 32;\nconst decoder = new TextDecoder(\"utf-16le\");\n\n/** Gets a string from an U32 and an U16 view on a memory. */\nfunction getStringImpl(buffer, ptr) {\n  const len = new Uint32Array(buffer)[ptr + SIZE_OFFSET >>> 2] >>> 1;\n  const arr = new Uint16Array(buffer, ptr, len);\n  if (len <= STRING_DECODE_THRESHOLD) {\n    return String.fromCharCode.apply(String, arr);\n  }\n  return decoder.decode(arr);\n}\n\n/** Prepares the base module prior to instantiation. */\nfunction preInstantiate(imports) {\n  const extendedExports = {};\n\n  function getString(memory, ptr) {\n    if (!memory) return \"<yet unknown>\";\n    return getStringImpl(memory.buffer, ptr);\n  }\n\n  // add common imports used by stdlib for convenience\n  const env = (imports.env = imports.env || {});\n  env.abort = env.abort || function abort(msg, file, line, colm) {\n    const memory = extendedExports.memory || env.memory; // prefer exported, otherwise try imported\n    throw Error(`abort: ${getString(memory, msg)} at ${getString(memory, file)}:${line}:${colm}`);\n  };\n  env.trace = env.trace || function trace(msg, n, ...args) {\n    const memory = extendedExports.memory || env.memory;\n    console.log(`trace: ${getString(memory, msg)}${n ? \" \" : \"\"}${args.slice(0, n).join(\", \")}`);\n  };\n  env.seed = env.seed || Date.now;\n  imports.Math = imports.Math || Math;\n  imports.Date = imports.Date || Date;\n\n  return extendedExports;\n}\n\nconst E_NOEXPORTRUNTIME = \"Operation requires compiling with --exportRuntime\";\nconst F_NOEXPORTRUNTIME = function() { throw Error(E_NOEXPORTRUNTIME); };\n\n/** Prepares the final module once instantiation is complete. */\nfunction postInstantiate(extendedExports, instance) {\n  const exports = instance.exports;\n  const memory = exports.memory;\n  const table = exports.table;\n  const __new = exports.__new || F_NOEXPORTRUNTIME;\n  const __pin = exports.__pin || F_NOEXPORTRUNTIME;\n  const __unpin = exports.__unpin || F_NOEXPORTRUNTIME;\n  const __collect = exports.__collect || F_NOEXPORTRUNTIME;\n  const __rtti_base = exports.__rtti_base || ~0; // oob if not present\n\n  extendedExports.__new = __new;\n  extendedExports.__pin = __pin;\n  extendedExports.__unpin = __unpin;\n  extendedExports.__collect = __collect;\n\n  /** Gets the runtime type info for the given id. */\n  function getInfo(id) {\n    const U32 = new Uint32Array(memory.buffer);\n    const count = U32[__rtti_base >>> 2];\n    if ((id >>>= 0) >= count) throw Error(`invalid id: ${id}`);\n    return U32[(__rtti_base + 4 >>> 2) + id * 2];\n  }\n\n  /** Gets and validate runtime type info for the given id for array like objects */\n  function getArrayInfo(id) {\n    const info = getInfo(id);\n    if (!(info & (ARRAYBUFFERVIEW | ARRAY | STATICARRAY))) throw Error(`not an array: ${id}, flags=${info}`);\n    return info;\n  }\n\n  /** Gets the runtime base id for the given id. */\n  function getBase(id) {\n    const U32 = new Uint32Array(memory.buffer);\n    const count = U32[__rtti_base >>> 2];\n    if ((id >>>= 0) >= count) throw Error(`invalid id: ${id}`);\n    return U32[(__rtti_base + 4 >>> 2) + id * 2 + 1];\n  }\n\n  /** Gets the runtime alignment of a collection's values. */\n  function getValueAlign(info) {\n    return 31 - Math.clz32((info >>> VAL_ALIGN_OFFSET) & 31); // -1 if none\n  }\n\n  /** Gets the runtime alignment of a collection's keys. */\n  // function getKeyAlign(info) {\n  //   return 31 - Math.clz32((info >>> KEY_ALIGN_OFFSET) & 31); // -1 if none\n  // }\n\n  /** Allocates a new string in the module's memory and returns its pointer. */\n  function __newString(str) {\n    if (str == null) return 0;\n    const length = str.length;\n    const ptr = __new(length << 1, STRING_ID);\n    const U16 = new Uint16Array(memory.buffer);\n    for (var i = 0, p = ptr >>> 1; i < length; ++i) U16[p + i] = str.charCodeAt(i);\n    return ptr;\n  }\n\n  extendedExports.__newString = __newString;\n\n  /** Reads a string from the module's memory by its pointer. */\n  function __getString(ptr) {\n    if (!ptr) return null;\n    const buffer = memory.buffer;\n    const id = new Uint32Array(buffer)[ptr + ID_OFFSET >>> 2];\n    if (id !== STRING_ID) throw Error(`not a string: ${ptr}`);\n    return getStringImpl(buffer, ptr);\n  }\n\n  extendedExports.__getString = __getString;\n\n  /** Gets the view matching the specified alignment, signedness and floatness. */\n  function getView(alignLog2, signed, float) {\n    const buffer = memory.buffer;\n    if (float) {\n      switch (alignLog2) {\n        case 2: return new Float32Array(buffer);\n        case 3: return new Float64Array(buffer);\n      }\n    } else {\n      switch (alignLog2) {\n        case 0: return new (signed ? Int8Array : Uint8Array)(buffer);\n        case 1: return new (signed ? Int16Array : Uint16Array)(buffer);\n        case 2: return new (signed ? Int32Array : Uint32Array)(buffer);\n        case 3: return new (signed ? BigInt64Array : BigUint64Array)(buffer);\n      }\n    }\n    throw Error(`unsupported align: ${alignLog2}`);\n  }\n\n  /** Allocates a new array in the module's memory and returns its pointer. */\n  function __newArray(id, values) {\n    const info = getArrayInfo(id);\n    const align = getValueAlign(info);\n    const length = values.length;\n    const buf = __new(length << align, info & STATICARRAY ? id : ARRAYBUFFER_ID);\n    let result;\n    if (info & STATICARRAY) {\n      result = buf;\n    } else {\n      __pin(buf);\n      const arr = __new(info & ARRAY ? ARRAY_SIZE : ARRAYBUFFERVIEW_SIZE, id);\n      __unpin(buf);\n      const U32 = new Uint32Array(memory.buffer);\n      U32[arr + ARRAYBUFFERVIEW_BUFFER_OFFSET >>> 2] = buf;\n      U32[arr + ARRAYBUFFERVIEW_DATASTART_OFFSET >>> 2] = buf;\n      U32[arr + ARRAYBUFFERVIEW_DATALENGTH_OFFSET >>> 2] = length << align;\n      if (info & ARRAY) U32[arr + ARRAY_LENGTH_OFFSET >>> 2] = length;\n      result = arr;\n    }\n    const view = getView(align, info & VAL_SIGNED, info & VAL_FLOAT);\n    if (info & VAL_MANAGED) {\n      for (let i = 0; i < length; ++i) {\n        const value = values[i];\n        view[(buf >>> align) + i] = value;\n      }\n    } else {\n      view.set(values, buf >>> align);\n    }\n    return result;\n  }\n\n  extendedExports.__newArray = __newArray;\n\n  /** Gets a live view on an array's values in the module's memory. Infers the array type from RTTI. */\n  function __getArrayView(arr) {\n    const U32 = new Uint32Array(memory.buffer);\n    const id = U32[arr + ID_OFFSET >>> 2];\n    const info = getArrayInfo(id);\n    const align = getValueAlign(info);\n    let buf = info & STATICARRAY\n      ? arr\n      : U32[arr + ARRAYBUFFERVIEW_DATASTART_OFFSET >>> 2];\n    const length = info & ARRAY\n      ? U32[arr + ARRAY_LENGTH_OFFSET >>> 2]\n      : U32[buf + SIZE_OFFSET >>> 2] >>> align;\n    return getView(align, info & VAL_SIGNED, info & VAL_FLOAT).subarray(buf >>>= align, buf + length);\n  }\n\n  extendedExports.__getArrayView = __getArrayView;\n\n  /** Copies an array's values from the module's memory. Infers the array type from RTTI. */\n  function __getArray(arr) {\n    const input = __getArrayView(arr);\n    const len = input.length;\n    const out = new Array(len);\n    for (let i = 0; i < len; i++) out[i] = input[i];\n    return out;\n  }\n\n  extendedExports.__getArray = __getArray;\n\n  /** Copies an ArrayBuffer's value from the module's memory. */\n  function __getArrayBuffer(ptr) {\n    const buffer = memory.buffer;\n    const length = new Uint32Array(buffer)[ptr + SIZE_OFFSET >>> 2];\n    return buffer.slice(ptr, ptr + length);\n  }\n\n  extendedExports.__getArrayBuffer = __getArrayBuffer;\n\n  /** Copies a typed array's values from the module's memory. */\n  function getTypedArray(Type, alignLog2, ptr) {\n    return new Type(getTypedArrayView(Type, alignLog2, ptr));\n  }\n\n  /** Gets a live view on a typed array's values in the module's memory. */\n  function getTypedArrayView(Type, alignLog2, ptr) {\n    const buffer = memory.buffer;\n    const U32 = new Uint32Array(buffer);\n    const bufPtr = U32[ptr + ARRAYBUFFERVIEW_DATASTART_OFFSET >>> 2];\n    return new Type(buffer, bufPtr, U32[bufPtr + SIZE_OFFSET >>> 2] >>> alignLog2);\n  }\n\n  /** Attach a set of get TypedArray and View functions to the exports. */\n  function attachTypedArrayFunctions(ctor, name, align) {\n    extendedExports[`__get${name}`] = getTypedArray.bind(null, ctor, align);\n    extendedExports[`__get${name}View`] = getTypedArrayView.bind(null, ctor, align);\n  }\n\n  [\n    Int8Array,\n    Uint8Array,\n    Uint8ClampedArray,\n    Int16Array,\n    Uint16Array,\n    Int32Array,\n    Uint32Array,\n    Float32Array,\n    Float64Array\n  ].forEach(ctor => {\n    attachTypedArrayFunctions(ctor, ctor.name, 31 - Math.clz32(ctor.BYTES_PER_ELEMENT));\n  });\n\n  if (BIGINT) {\n    [BigUint64Array, BigInt64Array].forEach(ctor => {\n      attachTypedArrayFunctions(ctor, ctor.name.slice(3), 3);\n    });\n  }\n\n  /** Tests whether an object is an instance of the class represented by the specified base id. */\n  function __instanceof(ptr, baseId) {\n    const U32 = new Uint32Array(memory.buffer);\n    let id = U32[ptr + ID_OFFSET >>> 2];\n    if (id <= U32[__rtti_base >>> 2]) {\n      do {\n        if (id == baseId) return true;\n        id = getBase(id);\n      } while (id);\n    }\n    return false;\n  }\n\n  extendedExports.__instanceof = __instanceof;\n\n  // Pull basic exports to extendedExports so code in preInstantiate can use them\n  extendedExports.memory = extendedExports.memory || memory;\n  extendedExports.table  = extendedExports.table  || table;\n\n  // Demangle exports and provide the usual utility on the prototype\n  return demangle(exports, extendedExports);\n}\n\nfunction isResponse(src) {\n  return typeof Response !== \"undefined\" && src instanceof Response;\n}\n\nfunction isModule(src) {\n  return src instanceof WebAssembly.Module;\n}\n\n/** Asynchronously instantiates an AssemblyScript module from anything that can be instantiated. */\nexport async function instantiate(source, imports = {}) {\n  if (isResponse(source = await source)) return instantiateStreaming(source, imports);\n  const module = isModule(source) ? source : await WebAssembly.compile(source);\n  const extended = preInstantiate(imports);\n  const instance = await WebAssembly.instantiate(module, imports);\n  const exports = postInstantiate(extended, instance);\n  return { module, instance, exports };\n}\n\n/** Synchronously instantiates an AssemblyScript module from a WebAssembly.Module or binary buffer. */\nexport function instantiateSync(source, imports = {}) {\n  const module = isModule(source) ? source : new WebAssembly.Module(source);\n  const extended = preInstantiate(imports);\n  const instance = new WebAssembly.Instance(module, imports);\n  const exports = postInstantiate(extended, instance);\n  return { module, instance, exports };\n}\n\n/** Asynchronously instantiates an AssemblyScript module from a response, i.e. as obtained by `fetch`. */\nexport async function instantiateStreaming(source, imports = {}) {\n  if (!WebAssembly.instantiateStreaming) {\n    return instantiate(\n      isResponse(source = await source)\n        ? source.arrayBuffer()\n        : source,\n      imports\n    );\n  }\n  const extended = preInstantiate(imports);\n  const result = await WebAssembly.instantiateStreaming(source, imports);\n  const exports = postInstantiate(extended, result.instance);\n  return { ...result, exports };\n}\n\n/** Demangles an AssemblyScript module's exports to a friendly object structure. */\nexport function demangle(exports, extendedExports = {}) {\n  const setArgumentsLength = exports[\"__argumentsLength\"]\n    ? length => { exports[\"__argumentsLength\"].value = length; }\n    : exports[\"__setArgumentsLength\"] || exports[\"__setargc\"] || (() => { /* nop */ });\n  for (let internalName in exports) {\n    if (!Object.prototype.hasOwnProperty.call(exports, internalName)) continue;\n    const elem = exports[internalName];\n    let parts = internalName.split(\".\");\n    let curr = extendedExports;\n    while (parts.length > 1) {\n      let part = parts.shift();\n      if (!Object.prototype.hasOwnProperty.call(curr, part)) curr[part] = {};\n      curr = curr[part];\n    }\n    let name = parts[0];\n    let hash = name.indexOf(\"#\");\n    if (hash >= 0) {\n      const className = name.substring(0, hash);\n      const classElem = curr[className];\n      if (typeof classElem === \"undefined\" || !classElem.prototype) {\n        const ctor = function(...args) {\n          return ctor.wrap(ctor.prototype.constructor(0, ...args));\n        };\n        ctor.prototype = {\n          valueOf() { return this[THIS]; }\n        };\n        ctor.wrap = function(thisValue) {\n          return Object.create(ctor.prototype, { [THIS]: { value: thisValue, writable: false } });\n        };\n        if (classElem) Object.getOwnPropertyNames(classElem).forEach(name =>\n          Object.defineProperty(ctor, name, Object.getOwnPropertyDescriptor(classElem, name))\n        );\n        curr[className] = ctor;\n      }\n      name = name.substring(hash + 1);\n      curr = curr[className].prototype;\n      if (/^(get|set):/.test(name)) {\n        if (!Object.prototype.hasOwnProperty.call(curr, name = name.substring(4))) {\n          let getter = exports[internalName.replace(\"set:\", \"get:\")];\n          let setter = exports[internalName.replace(\"get:\", \"set:\")];\n          Object.defineProperty(curr, name, {\n            get() { return getter(this[THIS]); },\n            set(value) { setter(this[THIS], value); },\n            enumerable: true\n          });\n        }\n      } else {\n        if (name === 'constructor') {\n          (curr[name] = (...args) => {\n            setArgumentsLength(args.length);\n            return elem(...args);\n          }).original = elem;\n        } else { // instance method\n          (curr[name] = function(...args) { // !\n            setArgumentsLength(args.length);\n            return elem(this[THIS], ...args);\n          }).original = elem;\n        }\n      }\n    } else {\n      if (/^(get|set):/.test(name)) {\n        if (!Object.prototype.hasOwnProperty.call(curr, name = name.substring(4))) {\n          Object.defineProperty(curr, name, {\n            get: exports[internalName.replace(\"set:\", \"get:\")],\n            set: exports[internalName.replace(\"get:\", \"set:\")],\n            enumerable: true\n          });\n        }\n      } else if (typeof elem === \"function\" && elem !== setArgumentsLength) {\n        (curr[name] = (...args) => {\n          setArgumentsLength(args.length);\n          return elem(...args);\n        }).original = elem;\n      } else {\n        curr[name] = elem;\n      }\n    }\n  }\n  return extendedExports;\n}\n\nexport default {\n  instantiate,\n  instantiateSync,\n  instantiateStreaming,\n  demangle\n};\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport * as loader from '@assemblyscript/loader';\r\nclass SortOptions {\r\n    constructor(mode) {\r\n        if (mode == 1) {\r\n            this.mode = mode;\r\n            this.A = 1;\r\n            this.B = 2;\r\n            this.C = 3;\r\n            this.fromA = 0;\r\n            this.toA = 255;\r\n            this.fromB = 0;\r\n            this.toB = 255;\r\n            this.fromC = 0;\r\n            this.toC = 255;\r\n            this.sortBy = 1;\r\n        }\r\n    }\r\n}\r\nexport function init(wasmUrl) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const imports = {};\r\n        const respond = yield fetch(wasmUrl);\r\n        const bytes = yield respond.arrayBuffer();\r\n        const wasm = yield loader.instantiate(bytes, imports);\r\n        return new Sorter(wasm);\r\n    });\r\n}\r\nclass Sorter {\r\n    constructor(wasm) {\r\n        this.wasm = wasm;\r\n    } //: loader.ASUtil & API\r\n    sort(imageData, h, options) {\r\n        const data = imageData.data;\r\n        const len = data.length;\r\n        // Load \r\n        const view0 = new DataView(this.wasm.instance.exports.memory.buffer);\r\n        for (let i = 0; i < len; ++i) {\r\n            view0.setUint8(i, data[i]);\r\n        }\r\n        // Process\r\n        this.wasm.instance.exports.sort(len, h, options);\r\n        // Map \r\n        const view1 = new DataView(this.wasm.instance.exports.memory.buffer);\r\n        for (let i = 0; i < len; ++i) {\r\n            data[i] = view1.getUint8(i);\r\n        }\r\n        return imageData;\r\n    }\r\n}\r\n"],"sourceRoot":""}